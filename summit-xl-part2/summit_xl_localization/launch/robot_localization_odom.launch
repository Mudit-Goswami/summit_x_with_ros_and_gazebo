<?xml version="1.0"?>
<launch>  

     <node pkg="tf" type="static_transform_publisher" name="fcu_broadcaster" args="0 -0.1 0.40 0 0 0 1 base_footprint fcu 50"/> 

     <!-- ekf_loc1 fuses only continuous data (imu and odometry). Publish the tf from odom_frame to base_footprint -->
   <node pkg="robot_localization" type="ekf_localization_node" name="ekf_loc_odom" clear_params="true" output="screen">      
      <remap from="odometry/filtered" to="odometry/filtered_odom" />

      <param name="frequency" value="30"/>
      <param name="sensor_timeout" value="0.1"/>

      <param name="two_d_mode" type="bool" value="true"/>
           
	  <!-- Defaults to "robot_localization_debug.txt" if unspecified. Please specify the full path. -->
	  <!-- param name="debug_out_file" value="/path/to/debug/file.txt"/ -->

      
      <param name="odom_frame" value="odom"/>
      <param name="base_link_frame" value="base_footprint"/>
      <!-- if robot_localization is performing local fusing, ie is calculating the odometry, :
        world_frame MUST BE set to the same value as odom_frame
        map_frame MUST NOT BE set
      -->
      <param name="world_frame" value="odom"/>
      <!-- <param name="map_frame" value="map"> --> 

      <param name="odom0" value="/summit_xl_control/odom"/> <!-- previously: /odom -->
      <param name="imu0" value="/imu/data"/>        <!-- previously: /imu/data -->

      <!-- from summit odom, we only take vx and vy. even if the robot is differential (cannot strafe, vy != 0) is good to fuse vy -->
      <rosparam param="odom0_config">[false, false, false,
                                      false, false, false,
                                      true,  true, false,
                                      false, false, false,
                                      false, false, false]</rosparam>

      <!--  If you have high-frequency data or are running with a low frequency parameter value, then you may want to increase
         the size of the subscription queue so that more measurements are fused. -->
	  <param name="odom0_queue_size" value="5"/>

      <!--  [ADVANCED] Large messages in ROS can exhibit strange behavior when they arrive at a high frequency. This is a result
      of Nagle's algorithm. This option tells the ROS subscriber to use the tcpNoDelay option, which disables Nagle's algorithm. -->
      <param name="odom0_nodelay" value="false" />

      <!-- if two or more sources provide absolute pose (position + orientation), the _differential parametet MUST BE TRUE for ALL of them except for ONE --> 
      <param name="odom0_differential" value="false"/>

      <!-- if the _relative parameter is set to TRUE, the initial state is the origin for both position and orientation -->
      <param name="odom0_relative" value="false"/>

      <!-- Be careful when setting the z-orientation value to true because you are going to fuse orientation data 
	coming from an attitude estimatior which is more likely to use a (slow-response) compass -->	
      <!-- in sim was also working with yaw' set to true -->
      <rosparam param="imu0_config">[false, false, false,
                                     false, false, true, 
                                     false, false, false,
                                     false, false, false,
                                     true, false, false]</rosparam>

      <param name="imu0_differential" value="false" />

      <!-- Set to false when fusing an absolute orientation estimation (e.g. coming from an attitude 
	     estimator which using a magnetic compass)-->
      <param name="imu0_relative" value="true"/>
      
      <param name="imu0_queue_size" value="8" />
     
      <!-- some IMUs automatically remove acceleration due to gravity, and others don't. If yours doesn't, please set 
        this to true, and *make sure* your data conforms to REP-103, specifically, that the data is in ENU frame. -->
      <param name="imu0_remove_gravitational_acceleration" type="bool" value="true"/>
      <param name="print_diagnostics" value="false"/>
   </node>

</launch>
